[buildout]
extends =
    https://raw.github.com/collective/buildout.plonetest/master/test-5.x.cfg
    https://raw.githubusercontent.com/plone/plone.app.robotframework/master/versions.cfg

package-name = plonesocial.suite
package-extras = [test]
test-eggs =
          plonesocial.suite
          plonesocial.microblog
          plonesocial.activitystream
          plonesocial.network
          plonesocial.theme

parts +=
      flake8
      jenkins-test
      coverage

allow-hosts +=
      code.google.com
      robotframework.googlecode.com

extensions =
    mr.developer

auto-checkout =
     plone.app.blocks
     plonesocial.activitystream
     plonesocial.core
     plonesocial.messaging
     plonesocial.microblog
     plonesocial.network
     plonesocial.theme

[sources]
plonesocial.microblog        = git https://github.com/cosent/plonesocial.microblog.git
plonesocial.activitystream   = git https://github.com/cosent/plonesocial.activitystream.git
plonesocial.core             = git https://github.com/cosent/plonesocial.core.git
plonesocial.messaging        = git https://github.com/cosent/plonesocial.messaging.git
plonesocial.network          = git https://github.com/cosent/plonesocial.network.git
plonesocial.theme            = git https://github.com/cosent/plonesocial.theme.git
plone.app.blocks             = git https://github.com/plone/plone.app.blocks.git

[instance]
eggs +=
     Pillow
     ${buildout:auto-checkout}

zcml +=
     ${buildout:auto-checkout}


[test]
recipe = collective.xmltestreport
defaults = ['--auto-color', '--auto-progress', '--xml', '-v']
eggs +=
     Pillow
     ${buildout:auto-checkout}

zcml +=
     ${buildout:auto-checkout}

[versions]
setuptools=5.4.1
zc.buildout=2.2.5

[flake8]
recipe = zc.recipe.egg
eggs = flake8
       ${instance:eggs}
entry-points =
    flake8=flake8.run:main

[jenkins-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    # Remove old results
    echo "Erase old coverage results."
    bin/coverage erase
    # Collect test coverage results for all packages
    echo "Run test coverage analysis for all packages."
    bin/coverage run -p --source=src bin/test $@ || exit 1
    echo "Create test coverage report."
    # Combine all package analysis
    bin/coverage combine
    # Generates a "coverage.xml" file that Jenkins can read and process from the
    # ".coverage" file that the coverage report created.
    bin/coverage xml -i -o ${buildout:directory}/parts/test/coverage.xml
    echo "Test coverage report finished."

output = ${buildout:directory}/bin/jenkins-test
mode = 755

[coverage]
recipe = zc.recipe.egg
eggs = coverage

